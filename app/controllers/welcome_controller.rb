class WelcomeController < ApplicationController
  def index
    if !params[:post].nil?
      @npc = NPCFacade.create_npc(params[:post][:score_type].downcase)

      #  Make NPC a model.  Give it all these attributes, but also give it the "saved" column.  Upon log out and upon session end, if the saved column says 'false', then delete the object.

      @npc_model = NpcModel.create(alignment: @npc.alignment,
                      ancestry: @npc.ancestry,
                      armor_class: @npc.armor_class,
                      background_equipment: @npc.background.equipment.to_s,
                      background_extra_languages: @npc.background.extra_languages,
                      background_name: @npc.background.name,
                      background_personality_personality: @npc.background.personality[:personality],
                      background_personality_ideal: @npc.background.personality[:ideal],
                      background_personality_bond: @npc.background.personality[:bond],
                      background_personality_flaw: @npc.background.personality[:flaw],
                      background_skill_proficiency_one: @npc.background.skill_proficiency_one,
                      background_skill_proficiency_two: @npc.background.skill_proficiency_two,
                      background_tool_proficiency_one: @npc.background.tool_proficiency_one,
                      background_tool_proficiency_two: @npc.background.tool_proficiency_two,
                      character_class: @npc.character_class,
                      equipment_extras: @npc.equipment.extras,
                      equipment_gold: @npc.equipment.gold,
                      gender: @npc.gender,
                      hit_dice: @npc.hit_dice,
                      initiative: @npc.initiative,
                      languages: @npc.languages.to_s,
                      name: @npc.name,
                      proficiencies_armor: @npc.proficiencies.armor,
                      proficiencies_weapons: @npc.proficiencies.weapons,
                      proficiencies_tools: @npc.proficiencies.tools,
                      size: @npc.size,
                      speed: @npc.speed,
                      stats_core_stats_stats_modifiers_str_mod: @npc.stats.core_stats.stats[:modifiers][:str_mod],
                      stats_core_stats_stats_modifiers_dex_mod: @npc.stats.core_stats.stats[:modifiers][:dex_mod],
                      stats_core_stats_stats_modifiers_con_mod: @npc.stats.core_stats.stats[:modifiers][:con_mod],
                      stats_core_stats_stats_modifiers_int_mod: @npc.stats.core_stats.stats[:modifiers][:int_mod],
                      stats_core_stats_stats_modifiers_wis_mod: @npc.stats.core_stats.stats[:modifiers][:wis_mod],
                      stats_core_stats_stats_modifiers_cha_mod: @npc.stats.core_stats.stats[:modifiers][:cha_mod],
                      stats_core_stats_stats_scores_str: @npc.stats.core_stats.stats[:scores][:str],
                      stats_core_stats_stats_scores_dex: @npc.stats.core_stats.stats[:scores][:dex],
                      stats_core_stats_stats_scores_con: @npc.stats.core_stats.stats[:scores][:con],
                      stats_core_stats_stats_scores_int: @npc.stats.core_stats.stats[:scores][:int],
                      stats_core_stats_stats_scores_wis: @npc.stats.core_stats.stats[:scores][:wis],
                      stats_core_stats_stats_scores_cha: @npc.stats.core_stats.stats[:scores][:cha],
                      stats_hit_points: @npc.stats.hit_points,
                      stats_passive_perception: @npc.stats.passive_perception,
                      stats_saving_throws_throws_str: @npc.stats.saving_throws.throws[:str],
                      stats_saving_throws_throws_dex: @npc.stats.saving_throws.throws[:dex],
                      stats_saving_throws_throws_con: @npc.stats.saving_throws.throws[:con],
                      stats_saving_throws_throws_int: @npc.stats.saving_throws.throws[:int],
                      stats_saving_throws_throws_wis: @npc.stats.saving_throws.throws[:wis],
                      stats_saving_throws_throws_cha: @npc.stats.saving_throws.throws[:cha],
                      stats_skills_proficiencies: @npc.stats.skills.proficiencies.to_s,
                      stats_skills_acrobatics: @npc.stats.skills.skills[:acrobatics],
                      stats_skills_animal_handling: @npc.stats.skills.skills[:animal_handling],
                      stats_skills_arcana: @npc.stats.skills.skills[:arcana],
                      stats_skills_athletics: @npc.stats.skills.skills[:athletics],
                      stats_skills_deception: @npc.stats.skills.skills[:deception],
                      stats_skills_history: @npc.stats.skills.skills[:history],
                      stats_skills_insight: @npc.stats.skills.skills[:insight],
                      stats_skills_intimidation: @npc.stats.skills.skills[:intimidation],
                      stats_skills_investigation: @npc.stats.skills.skills[:investigation],
                      stats_skills_medicine: @npc.stats.skills.skills[:medicine],
                      stats_skills_nature: @npc.stats.skills.skills[:nature],
                      stats_skills_perception: @npc.stats.skills.skills[:perception],
                      stats_skills_performance: @npc.stats.skills.skills[:performance],
                      stats_skills_persuasion: @npc.stats.skills.skills[:persuasion],
                      stats_skills_religion: @npc.stats.skills.skills[:religion],
                      stats_skills_sleight_of_hand: @npc.stats.skills.skills[:sleight_of_hand],
                      stats_skills_stealth: @npc.stats.skills.skills[:stealth],
                      stats_skills_survival: @npc.stats.skills.skills[:survival],
                      sub_ancestry: @npc.sub_ancestry.class == String ? @npc.sub_ancestry : @npc.sub_ancestry[:name],
                      traits: @npc.traits.to_s,
                      vision: @npc.vision,
                      is_saved: 0)
      require "pry"; binding.pry
    end
  end
end
